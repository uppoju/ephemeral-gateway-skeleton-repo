/*
 * Copyright (c) 2018 CA. All rights reserved.
 * This software may be modified and distributed under the terms
 * of the MIT license.  See the LICENSE file for details.
 */

buildscript {
    repositories {
        gradlePluginPortal()
        mavenCentral()
        jcenter()
        flatDir {
            dirs 'lib'
        }
    }
    dependencies {
        classpath 'org.apache.commons:commons-compress:1.18'
        classpath 'org.reflections:reflections:0.9.11'
        classpath 'com.google.inject:guice:4.2.1'
        classpath group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.9.6'
        classpath group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.6'
        classpath 'org.bouncycastle:bcprov-jdk15on:1.60'
        classpath 'commons-io:commons-io:2.6'
        classpath 'org.apache.commons:commons-lang3:3.8.1'
        classpath 'com.fasterxml.jackson.core:jackson-databind:2.9.7'
        classpath 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.7'
        classpath 'com.google.guava:guava:26.0-jre'
        classpath 'com.google.inject:guice:4.2.1'
        classpath 'org.apache.commons:commons-collections4:4.2'
        classpath 'org.jetbrains:annotations:16.0.2'
        classpath 'org.reflections:reflections:0.9.11'
        classpath 'org.apache.httpcomponents:httpclient:4.5.5'
        classpath 'org.slf4j:slf4j-simple:1.7.25'
        classpath 'org.apache.commons:commons-text:1.6'
        classpath "com.ca.apim.gateway:config-builder:0.8.+"
        classpath "com.ca.apim.gateway:environment-creator-application:0.8.+"
        classpath "com.ca.apim.gateway:gateway-developer-plugin:0.8.+"
        classpath "com.ca.apim.gateway:gateway-export-plugin:0.8.+"
        classpath "com.bmuschko:gradle-docker-plugin:4.6.2"
    }
}

apply plugin: 'com.ca.apim.gateway.gateway-developer-plugin'
apply plugin: 'com.ca.apim.gateway.gateway-export-plugin'


group 'demo'
version = '1.0.0'

GatewayConnection {
    url = 'https://10.80.241.82:8443/restman'
    userName = 'admin'
    userPass='7layer'
}

GatewayExportConfig {
    folderPath = '/'
}

wrapper {
    gradleVersion = '4.10'
}
dependencies {
    bundle group: 'influxdb', name: 'influxdb', version: '1.0.0', ext: 'bundle'
}
//
// Import task types
import com.bmuschko.gradle.docker.tasks.image.*

// Use task types
task buildDockerImage(type: DockerBuildImage) {
    apply plugin: 'com.bmuschko.docker-remote-api'
    inputDir.set(file('./'))
    tags.add(System.getProperty("imageName")+ ":" + System.getProperty("imageTag"))
    labels = ['org.opencontainers.image.created': new Date().format("yyyy-MM-dd'T'HH:mm:ss'Z'", TimeZone.getTimeZone("UTC"))]
    pull.set(true)
}
